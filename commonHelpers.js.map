{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import \"flatpickr/dist/flatpickr.min.css\";\n\nconst datetimePicker = flatpickr(\"#datetime-picker\", {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      const selectedDate = selectedDates[0];\n      const currentDate = new Date();\n      const currentTime = currentDate.getTime();\n      const selectedTime = selectedDate.getTime();\n\n      if (selectedTime <= currentTime) {\n        alert('Please choose a date in the future');\n        document.querySelector('[data-start]').disabled = true;\n      } else {\n        document.querySelector('[data-start]').disabled = false;\n      }\n    },\n  });\n\n  let countdownInterval;\n\n  function startCountdown(endTime) {\n    countdownInterval = setInterval(() => {\n      const currentTime = new Date().getTime();\n      const timeDifference = endTime - currentTime;\n      const { days, hours, minutes, seconds } = convertMs(timeDifference);\n\n      document.querySelector('[data-days]').textContent = addLeadingZero(days);\n      document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n      document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n      document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n\n      if (timeDifference <= 0) {\n        clearInterval(countdownInterval);\n        alert('Countdown Finished');\n      }\n    }, 1000);\n  }\n\n  function addLeadingZero(value) {\n    return value < 10 ? `0${value}` : value;\n  }\n\n  function convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n  }\n\n  document.querySelector('[data-start]').addEventListener('click', () => {\n    const selectedDate = datetimePicker.selectedDates[0];\n    const endTime = selectedDate.getTime();\n    \n    startCountdown(endTime);\n  });"],"names":["datetimePicker","selectedDates","selectedDate","currentTime","countdownInterval","startCountdown","endTime","timeDifference","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms"],"mappings":"8wBAEA,MAAMA,EAAiB,UAAU,mBAAoB,CACjD,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,GAE7BE,EADc,IAAI,OACQ,UACXD,EAAa,WAEdC,GAClB,MAAM,oCAAoC,EAC1C,SAAS,cAAc,cAAc,EAAE,SAAW,IAElD,SAAS,cAAc,cAAc,EAAE,SAAW,EAErD,CACL,CAAG,EAED,IAAIC,EAEJ,SAASC,EAAeC,EAAS,CAC/BF,EAAoB,YAAY,IAAM,CACpC,MAAMD,EAAc,IAAI,KAAM,EAAC,QAAO,EAChCI,EAAiBD,EAAUH,EAC3B,CAAE,KAAAK,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAc,EAElE,SAAS,cAAc,aAAa,EAAE,YAAcM,EAAeL,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcK,EAAeJ,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcI,EAAeH,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,EAEzEJ,GAAkB,IACpB,cAAcH,CAAiB,EAC/B,MAAM,oBAAoB,EAE7B,EAAE,GAAI,CACR,CAED,SAASS,EAAeC,EAAO,CAC7B,OAAOA,EAAQ,GAAK,IAAIA,IAAUA,CACnC,CAED,SAASF,EAAUG,EAAI,CAMrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAC1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EACpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EACjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAED,SAAS,cAAc,cAAc,EAAE,iBAAiB,QAAS,IAAM,CAErE,MAAML,EADeN,EAAe,cAAc,GACrB,UAE7BK,EAAeC,CAAO,CAC1B,CAAG"}